---
import { formatDate } from '~/utils/date';
import type { CollectionEntry } from 'astro:content';
import { siteMetadata } from '~/data/siteMetadata';

export interface Props {
  article: CollectionEntry<'blog'>;
  className?: string;
  showImage?: boolean;
  showExcerpt?: boolean;
}

const {
  article,
  className = '',
  showImage = true,
  showExcerpt = true
} = Astro.props;

const { data: frontmatter, id } = article;
const articleUrl = `/articles/${id}`;
---

<article class={`group bg-white dark:bg-gray-900 rounded-lg border border-gray-200 dark:border-gray-800 hover:border-pink-300 dark:hover:border-pink-700 transition-all duration-200 hover:shadow-lg ${className}`}>
  <a href={articleUrl} class="block overflow-hidden">
    {showImage && frontmatter.image && (
      <div class="aspect-video overflow-hidden rounded-t-lg">
        <img
          src={siteMetadata.articleImagePath + frontmatter.image}
          alt={frontmatter.title}
          class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-200"
          loading="lazy"
        />
      </div>
    )}

    <div class="p-6">
      <header class="mb-3">
        <h3 class="text-xl font-bold text-black dark:text-white group-hover:text-pink-600 dark:group-hover:text-pink-400 transition-colors line-clamp-2">
          {frontmatter.title}
        </h3>
      </header>

      {showExcerpt && (
        <p class="text-gray-600 dark:text-gray-400 text-sm leading-relaxed mb-4 line-clamp-3">
          {frontmatter.description}
        </p>
      )}

      <footer class="flex items-center justify-between">
        <div class="flex items-center space-x-4 text-xs text-gray-500 dark:text-gray-500">
          <time datetime={frontmatter.date.toISOString()} class="flex items-center space-x-1">
            <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                    d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
            </svg>
            <span>{formatDate(frontmatter.date)}</span>
          </time>
        </div>

        <div class="flex items-center text-pink-600 dark:text-pink-400 text-xs font-medium group-hover:text-pink-700 dark:group-hover:text-pink-300 transition-colors">
          Read more
          <svg class="w-3 h-3 ml-1 group-hover:translate-x-0.5 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
          </svg>
        </div>
      </footer>

      {frontmatter.tags && frontmatter.tags.length > 0 && (
        <div class="flex flex-wrap gap-1 mt-4 pt-4 border-t border-gray-100 dark:border-gray-800">
          {frontmatter.tags.slice(0, 3).map((tag: string) => (
            <span class="inline-flex items-center px-2 py-1 rounded text-xs font-medium bg-gray-100 text-gray-700 dark:bg-gray-800 dark:text-gray-300">
              #{tag}
            </span>
          ))}
          {frontmatter.tags.length > 3 && (
            <span class="inline-flex items-center px-2 py-1 rounded text-xs font-medium text-gray-500 dark:text-gray-500">
              +{frontmatter.tags.length - 3} more
            </span>
          )}
        </div>
      )}
    </div>
  </a>
</article>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>